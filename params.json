{"name":"QtDropbox","body":"***\r\n\r\n> QtDropbox is still in development. I expect to release a first release candidate in 2012! If you have some knowdledge in C++, Qt and/or the Dropbox REST API you are welcome as supporting developer (see below)!\r\n\r\n***\r\n\r\n# Want to access a Dropbox from Qt?\r\nQtDropbox provides an easy to use API that wraps the common REST API of [Dropbox](http://www.dropbox.com) in convenient C++ classes and objects for [Qt](http://www.qt-project.org). You don't have to worry about creating and calling any HTTP requests that are used to by oAuth and the Dropbox API - all of these calls are wrapped inside the Qt C++ API of QtDropbox!\r\n\r\n## Requirements\r\nEverything you nedd to use QtDropbox is provided by Qt itself or this library - there are no additional dependencies. QtDropbox relies on the QtNetwork and QtXml modules.\r\n\r\n## Including QtDropbox into your project\r\nIt is fairly easy to use QtDropbox in your own project. There are two tested and supported ways to include QtDropbox. As the project grows other usage methods will follow.\r\n\r\n### As dynamic library\r\nBuild the project by using `qmake` and `make` (or any other commands you usually use). Create a folder called qtdropbox. Copy the libqtdropbox.pri file and all header files into that folder. Now copy that folder (and the library as needed) to your project directory. In your project file (.pro) you only need to add this line:\r\n\r\n`include(\"qtdropbox/libqtdropbox.pri\")`\r\n\r\nAs the project continues some scripts and improvements will be provided to provide some degree of automation for this method.\r\n\r\n### Use the source!\r\nInclude the whole `src` directory in your project and compile the library with your code. It is necessary to add the Qt modules `network` and `xml` to use this method.\r\n\r\n# Current status\r\nQtDropbox is not finished by now - the development just started! These features are already implemented:\r\n\r\n* Connect to dropbox\r\n* Request account information\r\n* Access files (read/write)\r\n\r\nThe next features to be implemented are:\r\n* Documentation\r\n* Accessing file/directory metadata\r\n* Acessing the directory structure\r\n\r\n# Support us!\r\nBecause QtDropbox is still in development I am glad about every helping hand on the project. If you know a bit about Qt, C++ and the Dropbox REST API you can be a valuable member of this project. Because there is currently only one person maintaining QtDropbox I support two ways of contributing:\r\n\r\n1.  _(Prefered)_ Contact me by mailing to `qtdropbox dot deder dot at`. Add `[QtDropbox]` to the subject of your mail. It doesn't matter if you've got a question, a patch or if you want to join the project as active developer.\r\n2.  Open a new [issue](https://github.com/lycis/QtDropbox/issues) and add a patch if you have a solution for the bug.\r\n\r\nI will look into any questions (and try to answer them in time) as well as I will look into any patches I receive.","tagline":"Dropbox API for Qt","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}